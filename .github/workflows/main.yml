
name: Deploy On Server

env:
  NODE_VERSION: '14'
  PACKAGE_MANAGER: 'npm'
  APP_FOLDER: 'app'
  UPLOAD_PATH: 'dist/LinuxFrontend'
  NODE_ROOT: './'
  APP_NAME: '.linux-frontend'

on:
  push:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node Environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ env.UPLOAD_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.APP_NAME }}
          path: ${{ env.NODE_ROOT }}${{ env.APP_FOLDER }}

      - name: Copy files via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: ${{env.NODE_ROOT}}
          target: ${{ secrets.COPY_TO }}

      - name: Move files to temp folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: rm -rf ${{ secrets.COPY_LAST }};mv ${{ secrets.COPY_FROM }} ${{ secrets.COPY_LAST }};

      - name: Move files to deployment folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: sudo rm -rf ${{ secrets.APP_LOCATION }};sudo mv ${{ secrets.COPY_LAST }}${{ env.APP_FOLDER }} ${{ secrets.APP_LOCATION }};sudo systemctl reload nginx;
